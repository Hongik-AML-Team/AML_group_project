{"src": "Make dictionary from list with python", "tgt": "dict(x[i:i + 2] for i in range(0, len(x), 2))", "pred": "dict([(k, v) for k, v in zip(keys, values)]", "error": "'(' was never closed (<string>, line 1)"}
{"src": "Find a value within nested json dictionary in python", "tgt": "list(data['A']['B'].values())[0]['maindata'][0]['Info']", "pred": "try:\n    return next(iter(d.values()) if next(d) else None)", "error": "expected 'except' or 'finally' block (<string>, line 2)"}
{"src": "Converting lists of tuples to strings Python", "tgt": "\"\"\" \"\"\".join([('%d@%d' % t) for t in l])", "pred": "\"\"\"\"\"\".join([item[0] for item in L] for item in L)]", "error": "unmatched ']' (<string>, line 1)"}
{"src": "Converting lists of tuples to strings Python", "tgt": "\"\"\" \"\"\".join([('%d@%d' % (t[0], t[1])) for t in l])", "pred": "\"\"\"\"\"\".join([item[0] for item in L] for item in L)]", "error": "unmatched ']' (<string>, line 1)"}
{"src": "printing tab-separated values of a list", "tgt": "print('\\t'.join(map(str, list)))", "pred": "print('\\t'.join(map(str, myList)) for myList))", "error": "unmatched ')' (<string>, line 1)"}
{"src": "finding n largest differences between two lists", "tgt": "heapq.nlargest(10, range(len(l1)), key=lambda i: abs(l1[i] - l2[i]))", "pred": "max(len(a) - len(b)) for a, b in zip(a, b))", "error": "unmatched ')' (<string>, line 1)"}
{"src": "How do I convert tuple of tuples to list in one line (pythonic)?", "tgt": "from functools import reduce\nreduce(lambda a, b: a + b, (('aa',), ('bb',), ('cc',)))", "pred": "list(map(list, zip(*t))))", "error": "unmatched ')' (<string>, line 1)"}
{"src": "How do I convert tuple of tuples to list in one line (pythonic)?", "tgt": "map(lambda a: a[0], (('aa',), ('bb',), ('cc',)))", "pred": "list(map(list, zip(*t))))", "error": "unmatched ')' (<string>, line 1)"}
{"src": "Django view returning json without using template", "tgt": "return HttpResponse(data, mimetype='application/json')", "pred": "return HttpResponse(json.dumps(response_data), content_type='application/json')", "error": "'return' outside function (<string>, line 1)"}
{"src": "Create dictionary from lists of keys and multiple values", "tgt": "dict([('Name', 'Joe'), ('Age', 22)])", "pred": "dict([(k, v) for k, v in zip(keys, values))]", "error": "closing parenthesis ')' does not match opening parenthesis '[' (<string>, line 1)"}
{"src": "How to reverse a dictionary in Python?", "tgt": "{i[1]: i[0] for i in list(myDictionary.items())}", "pred": "dict((k, reverse(v) for k, v in list(d.items()))", "error": "invalid syntax (<string>, line 1)"}
{"src": "How do I return a 401 Unauthorized in Django?", "tgt": "return HttpResponse('Unauthorized', status=401)", "pred": "return HttpResponse(status=401)", "error": "'return' outside function (<string>, line 1)"}
{"src": "How do I INSERT INTO t1 (SELECT * FROM t2) in SQLAlchemy?", "tgt": "session.execute('INSERT INTO t1 (SELECT * FROM t2)')", "pred": "cursor.execute('INSERT INTO table VALUES (%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s", "error": "unterminated string literal (detected at line 1) (<string>, line 1)"}
{"src": "How to delete all instances of a character in a string in python?", "tgt": "\"\"\"\"\"\".join([char for char in 'it is icy' if char != 'i'])", "pred": "\"\"\"\"\"\".join(c for c in s if c.isalpha()])", "error": "closing parenthesis ']' does not match opening parenthesis '(' (<string>, line 1)"}
{"src": "How to delete all instances of a character in a string in python?", "tgt": "re.sub('i', '', 'it is icy')", "pred": "\"\"\"\"\"\".join(c for c in s if c.isalpha()])", "error": "closing parenthesis ']' does not match opening parenthesis '(' (<string>, line 1)"}
{"src": "How to delete all instances of a character in a string in python?", "tgt": "\"\"\"it is icy\"\"\".replace('i', '')", "pred": "\"\"\"\"\"\".join(c for c in s if c.isalpha()])", "error": "closing parenthesis ']' does not match opening parenthesis '(' (<string>, line 1)"}
{"src": "How to delete all instances of a character in a string in python?", "tgt": "\"\"\"\"\"\".join([char for char in 'it is icy' if char != 'i'])", "pred": "\"\"\"\"\"\".join(c for c in s if c.isalpha()])", "error": "closing parenthesis ']' does not match opening parenthesis '(' (<string>, line 1)"}
{"src": "Reading unicode elements into numpy array", "tgt": "arr = numpy.fromiter(codecs.open('new.txt', encoding='utf-8'), dtype='<U2')", "pred": "numpy.fromstring('\\u0420\\u0430\\u0430\\u0430\\u0430\\u0430\\u0430\\u0430\\u0430\\u0430\\u0430\\u0430\\u0430\\u0430\\u0430\\u0430\\u0430\\u0430\\u0430\\u0430\\u0430\\u0430\\u0430\\", "error": "unterminated string literal (detected at line 1) (<string>, line 1)"}
{"src": "Sending post data from angularjs to django as JSON and not as raw content", "tgt": "json.loads(request.body)", "pred": "return HttpResponse(json.dumps(postdata))", "error": "'return' outside function (<string>, line 1)"}
